<UserControl x:Class="Panoramas_Editor.ImageCenterSelector"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Panoramas_Editor"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding HandleUnloadedEventCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Vertical"
                    Grid.Row="0"
                    Margin="10,10,10,0">

            <TextBlock Text="Укажите новый центр изображения:"
                       FontWeight="Medium"
                       Margin="0,0,0,2.5"/>

            <StackPanel Orientation="Horizontal"
                        Margin="0,0,0,5">

                <!--Минус 90 градусов по горизонтали-->
                <Button Style="{StaticResource TransparentButtonStyle}"
                        Command="{Binding Path=MoveOffsetLeftCommand}"
                        Margin="0,0,5,0">
                    <fa:ImageAwesome Icon="LongArrowLeft"
                                     Foreground="{StaticResource IconsBrush}"
                                     Width="30"
                                     Margin="0,0,0,0"
                                     VerticalAlignment="Center"/>
                    <Button.ToolTip>
                        <ToolTip Content="-90 градусов по горизонтали"
                                 Style="{StaticResource ToolTipStyle}"/>
                    </Button.ToolTip>
                </Button>


                <!--Текстбокс с горизонтальным смещением-->
                <TextBox Width="45"
                         VerticalAlignment="Center"
                         Margin="0,0,5,0">
                    <TextBox.Text>
                        <Binding Path="SelectedHorizontalValueBox"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <TextBox.ToolTip>
                        <ToolTip Content="Горизонтальное смещение"
                                 Style="{StaticResource ToolTipStyle}"/>
                    </TextBox.ToolTip>
                </TextBox>

                <!--Плюс 90 градусов по горизонтали-->
                <Button Style="{StaticResource TransparentButtonStyle}"
                        Command="{Binding Path=MoveOffsetRightCommand}"
                        Margin="0,0,30,0">
                    <fa:ImageAwesome Icon="LongArrowRight"
                                     Foreground="{StaticResource IconsBrush}"
                                     Width="30"
                                     Margin="0,0,0,0"
                                     VerticalAlignment="Center"/>
                    <Button.ToolTip>
                        <ToolTip Content="+90 градусов по горизонтали"
                                 Style="{StaticResource ToolTipStyle}"/>
                    </Button.ToolTip>
                </Button>

                <!--Плюс 90 градусов по вертикали-->
                <Button Style="{StaticResource TransparentButtonStyle}"
                        Command="{Binding Path=MoveOffsetUpCommand}"
                        Margin="0,0,5,0">
                    <fa:ImageAwesome Icon="LongArrowUp"
                                     Foreground="{StaticResource IconsBrush}"
                                     Width="30"
                                     Height="30"
                                     Margin="0,0,0,0"
                                     VerticalAlignment="Center"/>
                    <Button.ToolTip>
                        <ToolTip Content="+90 градусов по вертикали"
                                 Style="{StaticResource ToolTipStyle}"/>
                    </Button.ToolTip>
                </Button>

                <!--Текстбокс с вертикальным смещением-->
                <TextBox Width="45"
                         VerticalAlignment="Center"
                         Margin="0,0,5,0">
                    <TextBox.Text>
                        <Binding Path="SelectedVerticalValueBox"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <TextBox.ToolTip>
                        <ToolTip Content="Вертикальное смещение"
                                 Style="{StaticResource ToolTipStyle}"/>
                    </TextBox.ToolTip>
                </TextBox>

                <!--Минус 90 градусов по вертикали-->
                <Button Style="{StaticResource TransparentButtonStyle}"
                        Command="{Binding Path=MoveOffsetDownCommand}"
                        Margin="0,0,5,0">
                    <fa:ImageAwesome Icon="LongArrowDown"
                                     Foreground="{StaticResource IconsBrush}"
                                     Width="30"
                                     Height="30"
                                     Margin="0,0,0,0"
                                     VerticalAlignment="Center"/>
                    <Button.ToolTip>
                        <ToolTip Content="-90 градусов по вертикали"
                                 Style="{StaticResource ToolTipStyle}"/>
                    </Button.ToolTip>
                </Button>

            </StackPanel>
        </StackPanel>

        <fa:ImageAwesome Grid.Row="1"
                         Icon="CircleOutlineNotch"
                         Foreground="{StaticResource IconsBrush}"
                         Height="50"
                         Width="50"
                         SpinDuration="2"
                         Spin="True"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Visibility="{Binding Bitmap, 
                                              Converter={StaticResource VisibleWhenNull}}" />

        <Canvas Name="cnvs"
                Grid.Row="1"
                Visibility="{Binding Bitmap, 
                                     Converter={StaticResource VisibleWhenHasValue}}"
                Margin="10,0,10,10">

            <Image Name="img"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Source="{Binding Path=Bitmap}"
                   Stretch="Uniform"
                   Height="{Binding Path=ActualHeight, ElementName=cnvs}"
                   Width="{Binding Path=ActualWidth, ElementName=cnvs}"
                   local:SizeObserver.Observe="True"
                   local:SizeObserver.ObservedWidth="{Binding ActualWidth_, Mode=OneWayToSource}"
                   local:SizeObserver.ObservedHeight="{Binding ActualHeight_, Mode=OneWayToSource}"/>
            
            <!-- Горизонтальная линия -->
            <Thumb Canvas.Left= "{Binding SelectedActualHorizontalValue,
                                          Mode=TwoWay}"
                   Style="{StaticResource HorizontalThumbStyle}"
                   Visibility="{Binding Bitmap, 
                                        Converter={StaticResource VisibleWhenHasValue}}">
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragDelta">
                        <i:InvokeCommandAction Command="{Binding HandleHorDragDeltaCommand}"
                                               PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <Thumb.Template>
                    <ControlTemplate>
                        <Border Background="Transparent"
                                Width="30">
                            <Line Y1="0"
                                  Y2="{Binding Path=ActualHeight, ElementName=img}"
                                  StrokeThickness="1.5"
                                  Stroke="Red"
                                  HorizontalAlignment="Center"/>
                            <Border.RenderTransform>
                                <TranslateTransform X="-15"/>
                            </Border.RenderTransform>
                        </Border>
                    </ControlTemplate>
                </Thumb.Template>
            </Thumb>
            
            <!-- Вертикальная линия-->
            <Thumb Canvas.Top="{Binding SelectedActualVerticalValue,
                                        Mode=TwoWay}"
                   Style="{StaticResource VerticalThumbStyle}"
                   Visibility="{Binding Bitmap, 
                                        Converter={StaticResource VisibleWhenHasValue}}">
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragDelta">
                        <i:InvokeCommandAction Command="{Binding HandleVerDragDeltaCommand}"
                                               PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <Thumb.Template>
                    <ControlTemplate>
                        <Border Background="Transparent"
                                Height="30">
                            <Line X1="0"
                                  X2="{Binding Path=ActualWidth, ElementName=img}"
                                  StrokeThickness="1.5"
                                  Stroke="Red"
                                  VerticalAlignment="Center"/>
                            <Border.RenderTransform>
                                <TranslateTransform Y="-15"/>
                            </Border.RenderTransform>
                        </Border>
                    </ControlTemplate>
                </Thumb.Template>
            </Thumb>

            <!-- Точка -->
            <Thumb Canvas.Left="{Binding SelectedActualHorizontalValue,
                                         Mode=TwoWay}"
                   Canvas.Top= "{Binding SelectedActualVerticalValue,
                                         Mode=TwoWay}"
                   Style="{StaticResource ThumbStyle}"
                   Visibility="{Binding Bitmap, 
                                        Converter={StaticResource VisibleWhenHasValue}}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragDelta">
                        <i:InvokeCommandAction Command="{Binding HandleDragDeltaCommand}"
                                               PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Thumb.Template>
                    <ControlTemplate>
                        <Border Background="Transparent"
                                Height="30"
                                Width="30">
                            <Ellipse Width="8"
                                     Height="8"
                                     Fill="Red"
                                     Margin="-0.8,-0.8,0,0"/>
                            <Border.RenderTransform>
                                <TranslateTransform X="-15" Y="-15"/>
                            </Border.RenderTransform>
                        </Border>
                    </ControlTemplate>
                </Thumb.Template>
            </Thumb>
            
        </Canvas>
    </Grid>
</UserControl>
